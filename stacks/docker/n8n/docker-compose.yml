# ====================================================================
# Stack: n8n
# Endpoint: hetzner-vm
# Source: Portainer stack ID 174 (portainer_dump\compose\174\docker-compose.yml)
# Generated: 2025-08-29 19:40:12
#
# What this does:
# - Docker Compose stack exported from Portainer.
# - Includes the following services (name : image):
#   - postgres : postgres:16-alpine
#   - n8n : n8nio/n8n:latest
#
# How to deploy:
# - Ensure any referenced volumes/networks exist.
# - Create/update a .env file if needed.
# - Run: docker compose up -d
# ====================================================================
version: "3.8"

# Save as: docker-compose.yml
# Put secrets and host-specific values in a .env next to this file (see vars referenced below).

services:
  postgres:
    image: postgres:16-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?set-in-.env}
    volumes:
      - ${POSTGRES_PORT1}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [app]

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    # Bind to your LAN IP so a remote NPM can forward to it.
    # Set N8N_BIND_IP in .env to your host's LAN IP (e.g., 192.168.42.33).
    ports:
      - ${N8N_PORT1}:5678
    environment:
      # Core
      NODE_ENV: production
      N8N_PORT: 5678
      GENERIC_TIMEZONE: America/New_York
      TZ: America/New_York
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:?set-in-.env}

      # Public URL for correct webhook/self URLs (TLS terminates at NPM)
      N8N_PROTOCOL: https
      N8N_HOST: ${N8N_HOST:-n8n.gnzaga.com}
      WEBHOOK_URL: ${WEBHOOK_URL:-https://n8n.gnzaga.com/}

      # Database
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB:-n8n}
      DB_POSTGRESDB_USER: ${POSTGRES_USER:-n8n}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}

      # Execution data retention (sane for exploration)
      EXECUTIONS_MODE: regular
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: none
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_PROGRESS: false
      EXECUTIONS_DATA_PRUNE: true
      EXECUTIONS_DATA_MAX_AGE: 168  # hours

      # Misc hardening/UX
      N8N_DIAGNOSTICS_ENABLED: false
      N8N_HIRING_BANNER_ENABLED: false
      N8N_USER_MANAGEMENT_DISABLED: false
    volumes:
      - ${N8N_PORT2}:/home/node/.n8n
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5678/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [app]

networks:
  app:
    driver: bridge

volumes:
  n8n-db:
  n8n-data:
